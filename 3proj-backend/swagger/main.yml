swagger: "2.0"
info:
  description: "3PROJ : REST API made with ExpressJS and documented with Swagger. HTTP scheme must be used for local test, HTTPS for production."
  version: "1.0.0"
  title: "3PROJ : BACKEND API DOCUMENTATION"
  contact:
    name: "RODET Nathan"
    email: "rodetnathan.contact@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: "Index"
    description: "Testing routes and HTCPCP protocol management."
  - name: "Auth"
    description: "Generate your token with an account to authenticate."
  - name: "Users"
    description: "Operations about users."
  - name: "Drive"
    description: "Operations on user documents."
  - name: "Users Admin"
    description: "Operations about users for administrators."
schemes:
  - "https"
  - "http"
securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: Authorization
    description: "The token describe if you're a normal user or an administrator."
paths:
  #####################################################
  # Index
  #####################################################
  /:
    get:
      tags:
        - "Index"
      summary: "Index route"
      description: "No content in here, 204 response."
      operationId: "getIndex"
      produces:
        - "application/json"
      responses:
        "204":
          description: "No content"
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
  ###########
  #
  ###########
  /teapot:
    get:
      tags:
        - "Index"
      summary: "HTCPCP/1.0 protocol management route"
      description: "HTCPCP/1.0 protocol, RFC specs : https://www.ietf.org/rfc/rfc2324.txt"
      operationId: "getTeapot"
      produces:
        - "application/json"
      responses:
        "418":
          description: "I'm a Teapot"
          schema:
            properties:
              Error:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
  #####################################################
  # Auth
  #####################################################
  /auth:
    post:
      tags:
        - "Auth"
      summary: "Authentication route"
      description: "Generate your token."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Credentials from your account"
          required: true
          schema:
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              token:
                type: string
              duration:
                type: string
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
  #####################################################
  # Users Admin
  #####################################################
  /users:
    get:
      tags:
        - "Users Admin"
      summary: "Admin - Get the list of all users"
      description: "Administrator request to get the users list, use the count users request to use the query properly."
      operationId: "getUsers"
      parameters:
        - in: query
          name: offset
          type: integer
          required: false
          description: "The number of items to skip before starting to collect the result set"
        - in: query
          name: limit
          type: integer
          required: false
          description: "The numbers of items to return"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              _id:
                type: string
              username:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              mail_name:
                type: string
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
    #####################################################
    # Users
    #####################################################
    post:
      tags:
        - "Users"
      summary: "Register your account"
      description: "Register your account"
      operationId: "postUser"
      parameters:
        - in: "body"
          name: "body"
          description: "Your user informations"
          required: true
          schema:
            properties:
              username:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              password:
                type: string
              mail:
                type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              _id:
                type: string
              username:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              mail:
                type: string
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
  ###########
  #
  ###########
  /users/username:
    patch:
      tags:
        - "Users"
      summary: "Update the username"
      operationId: "UpdateUserUsername"
      parameters:
        - in: "body"
          name: "body"
          description: "New username"
          required: true
          schema:
            properties:
              username:
                type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              schema:
                properties:
                  ascknowledged:
                    type: boolean
                  modifiedCount:
                    type: integer
                  upsertedId:
                    type: boolean
                  upsertedCount:
                    type: integer
                  matchedCount:
                    type: integer
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /users/first_name:
    patch:
      tags:
        - "Users"
      summary: "Update the first_name"
      operationId: "UpdateUserFirstname"
      parameters:
        - in: "body"
          name: "body"
          description: "New first name"
          required: true
          schema:
            properties:
              first_name:
                type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              ascknowledged:
                type: boolean
              modifiedCount:
                type: integer
              upsertedId:
                type: boolean
              upsertedCount:
                type: integer
              matchedCount:
                type: integer
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /users/last_name:
    patch:
      tags:
        - "Users"
      summary: "Update the last_name"
      operationId: "UpdateUserLastname"
      parameters:
        - in: "body"
          name: "body"
          description: "New last name"
          required: true
          schema:
            properties:
              last_name:
                type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              ascknowledged:
                type: boolean
              modifiedCount:
                type: integer
              upsertedId:
                type: boolean
              upsertedCount:
                type: integer
              matchedCount:
                type: integer
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /users/mail:
    patch:
      tags:
        - "Users"
      summary: "Update the mail"
      operationId: "UpdateUserMail"
      parameters:
        - in: "body"
          name: "body"
          description: "New Mail : must have the format of a mail"
          required: true
          schema:
            properties:
              mail:
                type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              ascknowledged:
                type: boolean
              modifiedCount:
                type: integer
              upsertedId:
                type: boolean
              upsertedCount:
                type: integer
              matchedCount:
                type: integer
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /users/password:
    patch:
      tags:
        - "Users"
      summary: "Update the password"
      operationId: "UpdateUserPassword"
      parameters:
        - in: "body"
          name: "body"
          description: "New password : must have more than 8 characters"
          required: true
          schema:
            properties:
              password:
                type: string
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              ascknowledged:
                type: boolean
              modifiedCount:
                type: integer
              upsertedId:
                type: boolean
              upsertedCount:
                type: integer
              matchedCount:
                type: integer
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  #####################################################
  # Users Admin
  #####################################################
  /users/count:
    get:
      tags:
        - "Users Admin"
      summary: "Admin - Get the users count and total space used"
      description: "Administrator request to get the total of users and the total space used"
      operationId: "getUsersCount"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              count:
                type: integer
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /users/specific/user/{userId}:
    get:
      tags:
        - "Users Admin"
      summary: "Admin - Delete a specific user"
      description: "Administrator request to delete a specific user by id."
      operationId: "deleteUsersById"
      parameters:
        - name: userId
          in: path
          description: "User id"
          required: true
          type: string
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              _id:
                type: string
              username:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              mail_name:
                type: string
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "404":
          description: "Not Found"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
    ###########
    #
    ###########
    delete:
      tags:
        - "Users Admin"
      summary: "Admin - Delete a user and its files."
      description: "Delete a user and its files."
      operationId: "deleteUsersById"
      parameters:
        - name: userId
          in: path
          description: "User id"
          required: true
          type: string
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              acknowledged:
                type: boolean
              deletedCount:
                type: integer
                default: 1
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /users/is_blocked/{userId}:
    patch:
      tags:
        - "Users Admin"
      summary: "Admin - Update the blocked state of a user"
      description: "Administrator request to update the blocked state of a user"
      operationId: "UpdateUserIsBlocked"
      parameters:
        - name: userId
          in: path
          description: "User id"
          required: true
          type: string
        - in: "body"
          name: "body"
          description: "Is blocked state"
          required: true
          schema:
            properties:
              is_blocked:
                type: boolean
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              ascknowledged:
                type: boolean
              modifiedCount:
                type: integer
              upsertedId:
                type: boolean
              upsertedCount:
                type: integer
              matchedCount:
                type: integer
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  #####################################################
  # Drive
  #####################################################
  /drive:
    get:
      tags:
        - "Drive"
      summary: "Get the list of files and their informations"
      description: "It will not download the files, just their informations"
      operationId: "getUserDocuments"
      parameters:
        - in: query
          name: offset
          type: integer
          required: false
          description: "The number of items to skip before starting to collect the result set"
        - in: query
          name: limit
          type: integer
          required: false
          description: "The numbers of items to return"
        - in: query
          name: sort
          type: string
          required: false
          description: "Correct value are : 'asc' for ascending and 'desc' for descending."
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                size:
                  type: string
                upload_date:
                  type: string
                filename:
                  type: string
                content_type:
                  type: string
                owner_id:
                  type: string
            properties:
              total_space_used:
                type: string
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
    ###########
    #
    ###########
    post:
      tags:
        - "Drive"
      summary: "Post a new document"
      description: "Will be accessible only by yourself"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: file
          in: formData
          description: "The uploaded file data"
          required: true
          type: file
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              _id:
                type: string
              filename:
                type: string
              upload_date:
                type: string
              size:
                type: integer
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /drive/count:
    get:
      tags:
        - "Drive"
      summary: "Get the count of list of files"
      description: "Get the count of list of files for listing and pagination."
      operationId: "getCountUserDocuments"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              count:
                type: integer
              total_size:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "404":
          description: "Not found"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /drive/specific/file/{fileId}:
    get:
      tags:
        - "Drive"
      summary: "Get informations for a specific file"
      description: "Get information for only one file."
      operationId: "postDocument"
      parameters:
        - name: fileId
          in: path
          description: "File id"
          required: true
          type: string
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              _id:
                type: string
              size:
                type: string
              upload_date:
                type: string
              filename:
                type: string
              content_type:
                type: string
              owner_id:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "404":
          description: "Not Found"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /drive/specific/files/{userId}:
    get:
      tags:
        - "Drive"
      summary: "Get informations for a specific user files."
      description: "Get informations for a specific user files."
      operationId: "postDocument"
      parameters:
        - name: userId
          in: path
          description: "User id"
          required: true
          type: string
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                size:
                  type: string
                upload_date:
                  type: string
                filename:
                  type: string
                content_type:
                  type: string
                owner_id:
                  type: string
            properties:
              total_space_used:
                type: string
              count:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "404":
          description: "Not Found"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
    ###########
    #
    ###########
    delete:
      tags:
        - "Drive"
      summary: "Delete By Id for a specific file"
      description: "Delete one file and its informations, you must be the owner of the file or an administrator."
      operationId: "DeleteDocumentById"
      parameters:
        - name: fileId
          in: path
          description: "File id"
          required: true
          type: string
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              message:
                type: string
        "204":
          description: "No Content"
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "404":
          description: "Not found"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
  ###########
  #
  ###########
  /drive/specific/file/download/{fileId}:
    get:
      tags:
        - "Drive"
      summary: "Download a document"
      description: "Download a document, you myst be the owner or the administrator."
      operationId: "getDocument"
      parameters:
        - name: fileId
          in: path
          description: "File id"
          required: true
          type: string
      produces:
        - "application/octet-stream"
      responses:
        "200":
          description: "OK"
          schema:
            properties:
              file:
                type: string
                format: binary
        "400":
          description: "Bad request"
          schema:
            properties:
              message:
                type: string
        "401":
          description: "Unauthorized"
          schema:
            properties:
              message:
                type: string
        "500":
          description: "Internal Server Error"
          schema:
            properties:
              message:
                type: string
      security:
        - JWT: [apiKey]
